{"ast":null,"code":"import { all, put, call, takeLatest } from 'redux-saga/effects';\nimport { Creators as UsersActions, Types } from '.';\nimport api from '../../../services/api';\nexport function* getUsers() {\n  const {\n    getUsersSuccess,\n    getUsersFailure\n  } = UsersActions;\n\n  try {\n    console.log('aqui');\n    yield call(api.get, '/employees');\n    yield put(getUsersSuccess());\n    console.log('aqui 2');\n  } catch (error) {\n    console.log('aqui 3');\n    yield put(getUsersFailure());\n  }\n}\nexport function* addUser({\n  user\n}) {\n  const {\n    addUserSuccess,\n    addUserFailure\n  } = UsersActions;\n\n  try {\n    yield call(api.post, '/employees', user);\n    yield put(addUserSuccess());\n  } catch (error) {\n    yield put(addUserFailure());\n  }\n}\nexport function* updateUser({\n  user,\n  id\n}) {\n  const {\n    addUserSuccess,\n    addUserFailure\n  } = UsersActions;\n\n  try {\n    yield call(api.put, `/employees/${id}`, user);\n    yield put(addUserSuccess());\n  } catch (error) {\n    yield put(addUserFailure());\n  }\n}\nexport function* deleteUser({\n  user,\n  id\n}) {\n  const {\n    addUserSuccess,\n    addUserFailure\n  } = UsersActions;\n\n  try {\n    yield call(api.delete, `/employees/${id}`, user);\n    yield put(addUserSuccess());\n  } catch (error) {\n    yield put(addUserFailure());\n  }\n}\nexport default all([takeLatest(Types.GET_USERS_REQUEST, getUsers), takeLatest(Types.ADD_USER_REQUEST, addUser), takeLatest(Types.UPDATE_USER_REQUEST, updateUser), takeLatest(Types.DELETE_USER_REQUEST, deleteUser)]);","map":{"version":3,"sources":["/home/mathlimma/Projects/desafio-3lm-informatica/src/store/ducks/user/saga.js"],"names":["all","put","call","takeLatest","Creators","UsersActions","Types","api","getUsers","getUsersSuccess","getUsersFailure","console","log","get","error","addUser","user","addUserSuccess","addUserFailure","post","updateUser","id","deleteUser","delete","GET_USERS_REQUEST","ADD_USER_REQUEST","UPDATE_USER_REQUEST","DELETE_USER_REQUEST"],"mappings":"AAAA,SAASA,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,UAAzB,QAA2C,oBAA3C;AACA,SAASC,QAAQ,IAAIC,YAArB,EAAmCC,KAAnC,QAAgD,GAAhD;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AAEA,OAAO,UAAUC,QAAV,GAAqB;AAC1B,QAAM;AAAEC,IAAAA,eAAF;AAAmBC,IAAAA;AAAnB,MAAuCL,YAA7C;;AACA,MAAI;AACFM,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAMV,IAAI,CAACK,GAAG,CAACM,GAAL,EAAU,YAAV,CAAV;AACA,UAAMZ,GAAG,CAACQ,eAAe,EAAhB,CAAT;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACA,UAAMX,GAAG,CAACS,eAAe,EAAhB,CAAT;AACD;AACF;AAED,OAAO,UAAUK,OAAV,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AACjC,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAqCb,YAA3C;;AACA,MAAI;AACF,UAAMH,IAAI,CAACK,GAAG,CAACY,IAAL,EAAW,YAAX,EAAyBH,IAAzB,CAAV;AACA,UAAMf,GAAG,CAACgB,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMb,GAAG,CAACiB,cAAc,EAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUE,UAAV,CAAqB;AAAEJ,EAAAA,IAAF;AAAQK,EAAAA;AAAR,CAArB,EAAmC;AACxC,QAAM;AAAEJ,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAqCb,YAA3C;;AACA,MAAI;AACF,UAAMH,IAAI,CAACK,GAAG,CAACN,GAAL,EAAW,cAAaoB,EAAG,EAA3B,EAA8BL,IAA9B,CAAV;AACA,UAAMf,GAAG,CAACgB,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMb,GAAG,CAACiB,cAAc,EAAf,CAAT;AACD;AACF;AAED,OAAO,UAAUI,UAAV,CAAqB;AAAEN,EAAAA,IAAF;AAAQK,EAAAA;AAAR,CAArB,EAAmC;AACxC,QAAM;AAAEJ,IAAAA,cAAF;AAAkBC,IAAAA;AAAlB,MAAqCb,YAA3C;;AACA,MAAI;AACF,UAAMH,IAAI,CAACK,GAAG,CAACgB,MAAL,EAAc,cAAaF,EAAG,EAA9B,EAAiCL,IAAjC,CAAV;AACA,UAAMf,GAAG,CAACgB,cAAc,EAAf,CAAT;AACD,GAHD,CAGE,OAAOH,KAAP,EAAc;AACd,UAAMb,GAAG,CAACiB,cAAc,EAAf,CAAT;AACD;AACF;AAED,eAAelB,GAAG,CAAC,CACjBG,UAAU,CAACG,KAAK,CAACkB,iBAAP,EAA0BhB,QAA1B,CADO,EAEjBL,UAAU,CAACG,KAAK,CAACmB,gBAAP,EAAyBV,OAAzB,CAFO,EAGjBZ,UAAU,CAACG,KAAK,CAACoB,mBAAP,EAA4BN,UAA5B,CAHO,EAIjBjB,UAAU,CAACG,KAAK,CAACqB,mBAAP,EAA4BL,UAA5B,CAJO,CAAD,CAAlB","sourcesContent":["import { all, put, call, takeLatest } from 'redux-saga/effects';\nimport { Creators as UsersActions, Types } from '.';\nimport api from '../../../services/api';\n\nexport function* getUsers() {\n  const { getUsersSuccess, getUsersFailure } = UsersActions;\n  try {\n    console.log('aqui');\n    yield call(api.get, '/employees');\n    yield put(getUsersSuccess());\n    console.log('aqui 2');\n  } catch (error) {\n    console.log('aqui 3');\n    yield put(getUsersFailure());\n  }\n}\n\nexport function* addUser({ user }) {\n  const { addUserSuccess, addUserFailure } = UsersActions;\n  try {\n    yield call(api.post, '/employees', user);\n    yield put(addUserSuccess());\n  } catch (error) {\n    yield put(addUserFailure());\n  }\n}\n\nexport function* updateUser({ user, id }) {\n  const { addUserSuccess, addUserFailure } = UsersActions;\n  try {\n    yield call(api.put, `/employees/${id}`, user);\n    yield put(addUserSuccess());\n  } catch (error) {\n    yield put(addUserFailure());\n  }\n}\n\nexport function* deleteUser({ user, id }) {\n  const { addUserSuccess, addUserFailure } = UsersActions;\n  try {\n    yield call(api.delete, `/employees/${id}`, user);\n    yield put(addUserSuccess());\n  } catch (error) {\n    yield put(addUserFailure());\n  }\n}\n\nexport default all([\n  takeLatest(Types.GET_USERS_REQUEST, getUsers),\n  takeLatest(Types.ADD_USER_REQUEST, addUser),\n  takeLatest(Types.UPDATE_USER_REQUEST, updateUser),\n  takeLatest(Types.DELETE_USER_REQUEST, deleteUser),\n]);\n"]},"metadata":{},"sourceType":"module"}