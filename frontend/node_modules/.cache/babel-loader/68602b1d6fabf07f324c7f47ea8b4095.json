{"ast":null,"code":"var _jsxFileName = \"/home/mathlimma/Projects/desafio-3lm-informatica/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header';\nimport EmployeeItem from '../../components/Employee';\nimport ModalAddEmployee from '../../components/ModalAddEmployee';\nimport ModalEditEmployee from '../../components/ModalEditEmployee';\nimport { Container } from './styles';\n\nconst Dashboard = () => {\n  const [Employee, setEmployee] = useState([]);\n  const [editingEmployee, setEditingEmployee] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  useEffect(() => {\n    async function loadEmployees() {// TODO LOAD FOODS\n    }\n\n    loadEmployees();\n  }, []);\n\n  async function handleAddEmployee(employee) {\n    try {// TODO ADD A NEW FOOD PLATE TO THE API\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateEmployee(employee) {// TODO UPDATE A FOOD PLATE ON THE API\n  }\n\n  async function handleDeleteEmployee(id) {// TODO DELETE A FOOD PLATE FROM THE API\n  }\n\n  function toggleModal() {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal() {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditEmployee(employee) {// TODO SET THE CURRENT EDITING FOOD ID IN THE STATE\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    openModal: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalAddEmployee, {\n    isOpen: modalOpen,\n    setIsOpen: toggleModal,\n    handleAddEmployee: handleAddEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalEditEmployee, {\n    isOpen: editModalOpen,\n    setIsOpen: toggleEditModal,\n    editingEmployee: editingEmployee,\n    handleUpdateEmployee: handleUpdateEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, Employee && Employee.map(Employee => /*#__PURE__*/React.createElement(EmployeeItem, {\n    key: Employee.id,\n    employee: Employee,\n    handleDelete: handleDeleteEmployee,\n    handleEditEmployee: handleEditEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/mathlimma/Projects/desafio-3lm-informatica/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","Header","EmployeeItem","ModalAddEmployee","ModalEditEmployee","Container","Dashboard","Employee","setEmployee","editingEmployee","setEditingEmployee","modalOpen","setModalOpen","editModalOpen","setEditModalOpen","loadEmployees","handleAddEmployee","employee","err","console","log","handleUpdateEmployee","handleDeleteEmployee","id","toggleModal","toggleEditModal","handleEditEmployee","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAIA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AAEA,SAASC,SAAT,QAA0B,UAA1B;;AAgBA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAc,EAAd,CAAxC;AACA,QAAM,CAACU,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CACpD,EADoD,CAAtD;AAGA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,KAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAee,aAAf,GAA8C,CAC5C;AACD;;AAEDA,IAAAA,aAAa;AACd,GANQ,EAMN,EANM,CAAT;;AAQA,iBAAeC,iBAAf,CAAiCC,QAAjC,EAAqE;AACnE,QAAI,CACF;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,iBAAeG,oBAAf,CAAoCJ,QAApC,EAAwE,CACtE;AACD;;AAED,iBAAeK,oBAAf,CAAoCC,EAApC,EAA+D,CAC7D;AACD;;AAED,WAASC,WAAT,GAA6B;AAC3BZ,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASc,eAAT,GAAiC;AAC/BX,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD;;AAED,WAASa,kBAAT,CAA4BT,QAA5B,EAAuD,CACrD;AACD;;AAED,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEO,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,gBAAD;AACE,IAAA,MAAM,EAAEb,SADV;AAEE,IAAA,SAAS,EAAEa,WAFb;AAGE,IAAA,iBAAiB,EAAER,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE,oBAAC,iBAAD;AACE,IAAA,MAAM,EAAEH,aADV;AAEE,IAAA,SAAS,EAAEY,eAFb;AAGE,IAAA,eAAe,EAAEhB,eAHnB;AAIE,IAAA,oBAAoB,EAAEY,oBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAcE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QAAQ,IACPA,QAAQ,CAACoB,GAAT,CAAapB,QAAQ,iBACnB,oBAAC,YAAD;AACE,IAAA,GAAG,EAAEA,QAAQ,CAACgB,EADhB;AAEE,IAAA,QAAQ,EAAEhB,QAFZ;AAGE,IAAA,YAAY,EAAEe,oBAHhB;AAIE,IAAA,kBAAkB,EAAEI,kBAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CAdF,CADF;AA4BD,CAxED;;AA0EA,eAAepB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Header from '../../components/Header';\n\nimport api from '../../services/api';\n\nimport EmployeeItem from '../../components/Employee';\nimport ModalAddEmployee from '../../components/ModalAddEmployee';\nimport ModalEditEmployee from '../../components/ModalEditEmployee';\n\nimport { Container } from './styles';\n\ninterface IEmployee {\n  id: number;\n  image: string;\n  name: string;\n  secondName: string;\n  role: IRole;\n  birth: string;\n  salary: boolean;\n}\n\ninterface IRole {\n  description: string;\n}\n\nconst Dashboard: React.FC = () => {\n  const [Employee, setEmployee] = useState<IEmployee[]>([]);\n  const [editingEmployee, setEditingEmployee] = useState<IEmployee>(\n    {} as IEmployee,\n  );\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  useEffect(() => {\n    async function loadEmployees(): Promise<void> {\n      // TODO LOAD FOODS\n    }\n\n    loadEmployees();\n  }, []);\n\n  async function handleAddEmployee(employee: IEmployee): Promise<void> {\n    try {\n      // TODO ADD A NEW FOOD PLATE TO THE API\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateEmployee(employee: IEmployee): Promise<void> {\n    // TODO UPDATE A FOOD PLATE ON THE API\n  }\n\n  async function handleDeleteEmployee(id: number): Promise<void> {\n    // TODO DELETE A FOOD PLATE FROM THE API\n  }\n\n  function toggleModal(): void {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditEmployee(employee: IEmployee): void {\n    // TODO SET THE CURRENT EDITING FOOD ID IN THE STATE\n  }\n\n  return (\n    <>\n      <Header openModal={toggleModal} />\n      <ModalAddEmployee\n        isOpen={modalOpen}\n        setIsOpen={toggleModal}\n        handleAddEmployee={handleAddEmployee}\n      />\n      <ModalEditEmployee\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingEmployee={editingEmployee}\n        handleUpdateEmployee={handleUpdateEmployee}\n      />\n\n      <Container>\n        {Employee &&\n          Employee.map(Employee => (\n            <EmployeeItem\n              key={Employee.id}\n              employee={Employee}\n              handleDelete={handleDeleteEmployee}\n              handleEditEmployee={handleEditEmployee}\n            />\n          ))}\n      </Container>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}