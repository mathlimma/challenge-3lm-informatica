{"ast":null,"code":"var _jsxFileName = \"/home/mathlimma/Projects/desafio-3lm-informatica/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header';\nimport Food from '../../components/Food';\nimport ModalAddEmployee from '../../components/ModalAddEmployee';\nimport ModalEditFood from '../../components/ModalEditFood';\nimport { FoodsContainer } from './styles';\n\nconst Dashboard = () => {\n  const [foods, setFoods] = useState([]);\n  const [editingFood, setEditingFood] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  useEffect(() => {\n    async function loadFoods() {// TODO LOAD FOODS\n    }\n\n    loadFoods();\n  }, []);\n\n  async function handleAddEmployee(employee) {\n    try {// TODO ADD A NEW FOOD PLATE TO THE API\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateFood(food) {// TODO UPDATE A FOOD PLATE ON THE API\n  }\n\n  async function handleDeleteFood(id) {// TODO DELETE A FOOD PLATE FROM THE API\n  }\n\n  function toggleModal() {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal() {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditFood(food) {// TODO SET THE CURRENT EDITING FOOD ID IN THE STATE\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    openModal: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalAddEmployee, {\n    isOpen: modalOpen,\n    setIsOpen: toggleModal,\n    handleAddEmployee: handleAddEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalEditFood, {\n    isOpen: editModalOpen,\n    setIsOpen: toggleEditModal,\n    editingFood: editingFood,\n    handleUpdateFood: handleUpdateFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(FoodsContainer, {\n    \"data-testid\": \"foods-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, foods && foods.map(food => /*#__PURE__*/React.createElement(Food, {\n    key: food.id,\n    food: food,\n    handleDelete: handleDeleteFood,\n    handleEditFood: handleEditFood,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/mathlimma/Projects/desafio-3lm-informatica/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","Header","Food","ModalAddEmployee","ModalEditFood","FoodsContainer","Dashboard","foods","setFoods","editingFood","setEditingFood","modalOpen","setModalOpen","editModalOpen","setEditModalOpen","loadFoods","handleAddEmployee","employee","err","console","log","handleUpdateFood","food","handleDeleteFood","id","toggleModal","toggleEditModal","handleEditFood","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAIA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,gBAAP,MAA6B,mCAA7B;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,SAASC,cAAT,QAA+B,UAA/B;;AAWA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAe,EAAf,CAAlC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAa,EAAb,CAA9C;AACA,QAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,KAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAee,SAAf,GAA0C,CACxC;AACD;;AAEDA,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAQA,iBAAeC,iBAAf,CAAiCC,QAAjC,EAAqE;AACnE,QAAI,CACF;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,iBAAeG,gBAAf,CACEC,IADF,EAEiB,CACf;AACD;;AAED,iBAAeC,gBAAf,CAAgCC,EAAhC,EAA2D,CACzD;AACD;;AAED,WAASC,WAAT,GAA6B;AAC3Bb,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASe,eAAT,GAAiC;AAC/BZ,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD;;AAED,WAASc,cAAT,CAAwBL,IAAxB,EAAgD,CAC9C;AACD;;AAED,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEG,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,gBAAD;AACE,IAAA,MAAM,EAAEd,SADV;AAEE,IAAA,SAAS,EAAEc,WAFb;AAGE,IAAA,iBAAiB,EAAET,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE,oBAAC,aAAD;AACE,IAAA,MAAM,EAAEH,aADV;AAEE,IAAA,SAAS,EAAEa,eAFb;AAGE,IAAA,WAAW,EAAEjB,WAHf;AAIE,IAAA,gBAAgB,EAAEY,gBAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAcE,oBAAC,cAAD;AAAgB,mBAAY,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,KAAK,IACJA,KAAK,CAACqB,GAAN,CAAUN,IAAI,iBACZ,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEA,IAAI,CAACE,EADZ;AAEE,IAAA,IAAI,EAAEF,IAFR;AAGE,IAAA,YAAY,EAAEC,gBAHhB;AAIE,IAAA,cAAc,EAAEI,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFJ,CAdF,CADF;AA4BD,CAxED;;AA0EA,eAAerB,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Header from '../../components/Header';\n\nimport api from '../../services/api';\n\nimport Food from '../../components/Food';\nimport ModalAddEmployee from '../../components/ModalAddEmployee';\nimport ModalEditFood from '../../components/ModalEditFood';\n\nimport { FoodsContainer } from './styles';\n\ninterface IEmployee {\n  id: number;\n  name: string;\n  secondName: string;\n  role: IRole;\n  birth: string;\n  salary: boolean;\n}\n\nconst Dashboard: React.FC = () => {\n  const [foods, setFoods] = useState<IFoodPlate[]>([]);\n  const [editingFood, setEditingFood] = useState<IFoodPlate>({} as IFoodPlate);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  useEffect(() => {\n    async function loadFoods(): Promise<void> {\n      // TODO LOAD FOODS\n    }\n\n    loadFoods();\n  }, []);\n\n  async function handleAddEmployee(employee: IEmployee): Promise<void> {\n    try {\n      // TODO ADD A NEW FOOD PLATE TO THE API\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateFood(\n    food: Omit<IFoodPlate, 'id' | 'available'>,\n  ): Promise<void> {\n    // TODO UPDATE A FOOD PLATE ON THE API\n  }\n\n  async function handleDeleteFood(id: number): Promise<void> {\n    // TODO DELETE A FOOD PLATE FROM THE API\n  }\n\n  function toggleModal(): void {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditFood(food: IFoodPlate): void {\n    // TODO SET THE CURRENT EDITING FOOD ID IN THE STATE\n  }\n\n  return (\n    <>\n      <Header openModal={toggleModal} />\n      <ModalAddEmployee\n        isOpen={modalOpen}\n        setIsOpen={toggleModal}\n        handleAddEmployee={handleAddEmployee}\n      />\n      <ModalEditFood\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingFood={editingFood}\n        handleUpdateFood={handleUpdateFood}\n      />\n\n      <FoodsContainer data-testid=\"foods-list\">\n        {foods &&\n          foods.map(food => (\n            <Food\n              key={food.id}\n              food={food}\n              handleDelete={handleDeleteFood}\n              handleEditFood={handleEditFood}\n            />\n          ))}\n      </FoodsContainer>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}