{"ast":null,"code":"var _jsxFileName = \"/home/mathlimma/Projects/desafio-3lm-informatica/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from '../../components/Header';\nimport EmployeeItem from '../../components/Employee';\nimport ModalAddEmployee from '../../components/ModalAddEmployee';\nimport ModalEditEmployee from '../../components/ModalEditEmployee';\nimport { Creators as UserActions } from '../../store/ducks/user';\nimport { Container } from './styles';\n\nconst Dashboard = () => {\n  const [employees, setEmployees] = useState([]);\n  const [editingEmployee, setEditingEmployee] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  const {\n    getUsersRequest\n  } = UserActions;\n  const {\n    users\n  } = useSelector(state => state.user);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    async function loadEmployees() {\n      dispatch(getUsersRequest());\n    }\n\n    loadEmployees();\n    setEmployees(user.users);\n  }, []);\n  console.log(user.users);\n\n  async function handleAddEmployee(employee) {\n    try {// TODO ADD A NEW FOOD PLATE TO THE API\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateEmployee(employee) {// TODO UPDATE A FOOD PLATE ON THE API\n  }\n\n  async function handleDeleteEmployee(id) {// TODO DELETE A FOOD PLATE FROM THE API\n  }\n\n  function toggleModal() {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal() {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditEmployee(employee) {// TODO SET THE CURRENT EDITING FOOD ID IN THE STATE\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    openModal: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalAddEmployee, {\n    isOpen: modalOpen,\n    setIsOpen: toggleModal,\n    handleAddEmployee: handleAddEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalEditEmployee, {\n    isOpen: editModalOpen,\n    setIsOpen: toggleEditModal,\n    editingEmployee: editingEmployee,\n    handleUpdateEmployee: handleUpdateEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }, employees && employees.map(employee => /*#__PURE__*/React.createElement(EmployeeItem, {\n    key: employee.id,\n    employee: employee,\n    handleDelete: handleDeleteEmployee,\n    handleEditEmployee: handleEditEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/mathlimma/Projects/desafio-3lm-informatica/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","useDispatch","useSelector","Header","EmployeeItem","ModalAddEmployee","ModalEditEmployee","Creators","UserActions","Container","Dashboard","employees","setEmployees","editingEmployee","setEditingEmployee","modalOpen","setModalOpen","editModalOpen","setEditModalOpen","getUsersRequest","users","state","user","dispatch","loadEmployees","console","log","handleAddEmployee","employee","err","handleUpdateEmployee","handleDeleteEmployee","id","toggleModal","toggleEditModal","handleEditEmployee","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Header from '../../components/Header';\nimport EmployeeItem from '../../components/Employee';\nimport ModalAddEmployee from '../../components/ModalAddEmployee';\nimport ModalEditEmployee from '../../components/ModalEditEmployee';\nimport { Creators as UserActions } from '../../store/ducks/user';\n\nimport { Container } from './styles';\n\ninterface IEmployee {\n  id: number;\n  image: string;\n  name: string;\n  secondName: string;\n  role: IRole;\n  birth: string;\n  salary: boolean;\n}\n\ninterface IRole {\n  description: string;\n}\n\ninterface IRootState {\n  user: IUser;\n}\n\ninterface IUser {\n  users: IEmployee[];\n  loading: boolean;\n}\n\nconst Dashboard: React.FC = () => {\n  const [employees, setEmployees] = useState<IEmployee[]>([]);\n  const [editingEmployee, setEditingEmployee] = useState<IEmployee>(\n    {} as IEmployee,\n  );\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  const { getUsersRequest } = UserActions;\n  const { users } = useSelector((state: IRootState) => state.user);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    async function loadEmployees(): Promise<void> {\n      dispatch(getUsersRequest());\n    }\n    loadEmployees();\n    setEmployees(user.users);\n  }, []);\n\n  console.log(user.users);\n\n  async function handleAddEmployee(employee: IEmployee): Promise<void> {\n    try {\n      // TODO ADD A NEW FOOD PLATE TO THE API\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateEmployee(employee: IEmployee): Promise<void> {\n    // TODO UPDATE A FOOD PLATE ON THE API\n  }\n\n  async function handleDeleteEmployee(id: number): Promise<void> {\n    // TODO DELETE A FOOD PLATE FROM THE API\n  }\n\n  function toggleModal(): void {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditEmployee(employee: IEmployee): void {\n    // TODO SET THE CURRENT EDITING FOOD ID IN THE STATE\n  }\n\n  return (\n    <>\n      <Header openModal={toggleModal} />\n      <ModalAddEmployee\n        isOpen={modalOpen}\n        setIsOpen={toggleModal}\n        handleAddEmployee={handleAddEmployee}\n      />\n      <ModalEditEmployee\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingEmployee={editingEmployee}\n        handleUpdateEmployee={handleUpdateEmployee}\n      />\n\n      <Container>\n        {employees &&\n          employees.map(employee => (\n            <EmployeeItem\n              key={employee.id}\n              employee={employee}\n              handleDelete={handleDeleteEmployee}\n              handleEditEmployee={handleEditEmployee}\n            />\n          ))}\n      </Container>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}