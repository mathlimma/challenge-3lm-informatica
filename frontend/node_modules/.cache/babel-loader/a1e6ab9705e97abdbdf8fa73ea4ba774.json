{"ast":null,"code":"var _jsxFileName = \"/home/mathlimma/Projects/desafio-3lm-informatica/src/pages/Dashboard/index.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport Header from '../../components/Header';\nimport ModalAddEmployee from '../../components/ModalAddEmployee';\n\nconst Dashboard = () => {\n  const [foods, setFoods] = useState([]);\n  const [editingFood, setEditingFood] = useState({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n  useEffect(() => {\n    async function loadFoods() {// TODO LOAD FOODS\n    }\n\n    loadFoods();\n  }, []);\n\n  async function handleAddEmployee(employee) {\n    try {// TODO ADD A NEW FOOD PLATE TO THE API\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateFood(employee) {// TODO UPDATE A FOOD PLATE ON THE API\n  }\n\n  async function handleDeleteFood(id) {// TODO DELETE A FOOD PLATE FROM THE API\n  }\n\n  function toggleModal() {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal() {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditFood(employee) {// TODO SET THE CURRENT EDITING FOOD ID IN THE STATE\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n    openModal: toggleModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ModalAddEmployee, {\n    isOpen: modalOpen,\n    setIsOpen: toggleModal,\n    handleAddEmployee: handleAddEmployee,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/mathlimma/Projects/desafio-3lm-informatica/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","Header","ModalAddEmployee","Dashboard","foods","setFoods","editingFood","setEditingFood","modalOpen","setModalOpen","editModalOpen","setEditModalOpen","loadFoods","handleAddEmployee","employee","err","console","log","handleUpdateFood","handleDeleteFood","id","toggleModal","toggleEditModal","handleEditFood"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,MAAP,MAAmB,yBAAnB;AAKA,OAAOC,gBAAP,MAA6B,mCAA7B;;AAcA,MAAMC,SAAmB,GAAG,MAAM;AAChC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAc,EAAd,CAAlC;AACA,QAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAY,EAAZ,CAA9C;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,KAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeY,SAAf,GAA0C,CACxC;AACD;;AAEDA,IAAAA,SAAS;AACV,GANQ,EAMN,EANM,CAAT;;AAQA,iBAAeC,iBAAf,CAAiCC,QAAjC,EAAqE;AACnE,QAAI,CACF;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAED,iBAAeG,gBAAf,CAAgCJ,QAAhC,EAAoE,CAClE;AACD;;AAED,iBAAeK,gBAAf,CAAgCC,EAAhC,EAA2D,CACzD;AACD;;AAED,WAASC,WAAT,GAA6B;AAC3BZ,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD;;AAED,WAASc,eAAT,GAAiC;AAC/BX,IAAAA,gBAAgB,CAAC,CAACD,aAAF,CAAhB;AACD;;AAED,WAASa,cAAT,CAAwBT,QAAxB,EAAmD,CACjD;AACD;;AAED,sBACE,uDACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEO,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,gBAAD;AACE,IAAA,MAAM,EAAEb,SADV;AAEE,IAAA,SAAS,EAAEa,WAFb;AAGE,IAAA,iBAAiB,EAAER,iBAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF;AA4BD,CAtED;;AAwEA,eAAeV,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Header from '../../components/Header';\n\nimport api from '../../services/api';\n\nimport Food from '../../components/Food';\nimport ModalAddEmployee from '../../components/ModalAddEmployee';\nimport ModalEditFood from '../../components/ModalEditFood';\n\nimport { FoodsContainer } from './styles';\n\ninterface IEmployee {\n  id: number;\n  name: string;\n  secondName: string;\n  role: string;\n  birth: string;\n  salary: boolean;\n}\n\nconst Dashboard: React.FC = () => {\n  const [foods, setFoods] = useState<IEmployee[]>([]);\n  const [editingFood, setEditingFood] = useState<IEmployee>({} as IEmployee);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [editModalOpen, setEditModalOpen] = useState(false);\n\n  useEffect(() => {\n    async function loadFoods(): Promise<void> {\n      // TODO LOAD FOODS\n    }\n\n    loadFoods();\n  }, []);\n\n  async function handleAddEmployee(employee: IEmployee): Promise<void> {\n    try {\n      // TODO ADD A NEW FOOD PLATE TO THE API\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async function handleUpdateFood(employee: IEmployee): Promise<void> {\n    // TODO UPDATE A FOOD PLATE ON THE API\n  }\n\n  async function handleDeleteFood(id: number): Promise<void> {\n    // TODO DELETE A FOOD PLATE FROM THE API\n  }\n\n  function toggleModal(): void {\n    setModalOpen(!modalOpen);\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen);\n  }\n\n  function handleEditFood(employee: IEmployee): void {\n    // TODO SET THE CURRENT EDITING FOOD ID IN THE STATE\n  }\n\n  return (\n    <>\n      <Header openModal={toggleModal} />\n      <ModalAddEmployee\n        isOpen={modalOpen}\n        setIsOpen={toggleModal}\n        handleAddEmployee={handleAddEmployee}\n      />\n      {/* <ModalEditFood\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingFood={editingFood}\n        handleUpdateFood={handleUpdateFood}\n      /> */}\n\n      {/* <FoodsContainer data-testid=\"foods-list\">\n        {foods &&\n          foods.map(food => (\n            <Food\n              key={food.id}\n              food={food}\n              handleDelete={handleDeleteFood}\n              handleEditFood={handleEditFood}\n            />\n          ))}\n      </FoodsContainer> */}\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}